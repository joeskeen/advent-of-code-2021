📜 🔤../emojicode/common.emojic🔤

🐇 🆎 🍇
    📗 Returns the valid test case names for this puzzle 📗
    🐇 ❓🧪 ➡️ 🍨🐚🔡🍆 🍇
        ↩️ 🍿 🔤00🔤  🍆
    🍉

    📗 Returns the solution for part A of the puzzle 📗
    💭 Incorrect answers: 1658(too high)
    🐇 ❓🅰️ input🍨🐚🔡🍆 ➡️ 🔡 🍇
        💭 transform the input string array into a 2D array of numbers (grid)
        🐰input 🍇 line🔡 ➡️ 🍨🐚🔢🍆 
            🎶line❗ ➡️ characters
            ↩️ 🐰characters 🍇 character🔡 ➡️ 🔢
                ↩️ 🍺🔢character 10❗
            🍉❗
        🍉❗ ➡️ grid

        💭 start out with a risk level of 0
        0 ➡️ 🖍️🆕riskLevel
        🆕🍨🐚🔡🍆❗ ➡️ 🖍️🆕lowPoints
        💭 foreach row in the grid
        🔂 rowIndex 🆕⏩0 📏grid❓ 1❗ 🍇
            rowIndex ➖ 1 ➡️ aboveIndex
            rowIndex ➕ 1 ➡️ belowIndex
            🐽grid rowIndex❗ ➡️ row
            💭 foreach cell in the row
            🔂 colIndex 🆕⏩0 📏row❓ 1❗ 🍇
                colIndex ➖ 1 ➡️ leftIndex
                colIndex ➕ 1 ➡️ rightIndex
                🐽row colIndex❗ ➡️ cell

                💭 check each direction for a lower value
                aboveIndex ▶️🙌 0 🤝 🤜🐽🐽grid aboveIndex❗ colIndex❗ ◀️ cell🤛 ➡️ isAboveLower
                belowIndex ◀️ 📏grid❓ 🤝 🤜🐽🐽grid belowIndex❗ colIndex❗ ◀️ cell🤛 ➡️ isBelowLower
                leftIndex ▶️🙌 0 🤝 🤜🐽🐽grid rowIndex❗ leftIndex❗ ◀️ cell🤛 ➡️ isLeftLower
                rightIndex ◀️ 📏row❓ 🤝 🤜🐽🐽grid rowIndex❗ rightIndex❗ ◀️ cell🤛 ➡️ isRightLower

                💭 if none of the adjacent cells are lower, add the value of the cell plus 1 to the risk level
                ↪️ ❎cell 🙌 9❗ 🤝 ❎isAboveLower❗ 🤝 ❎isBelowLower❗ 🤝 ❎isLeftLower❗ 🤝 ❎isRightLower❗ 🍇
                    riskLevel ⬅️➕ 🤜cell ➕ 1🤛
                    🔤(🧲colIndex🧲,🧲rowIndex🧲): 🧲cell🧲🔤 ➡️ point
                    💭 😀 point ❗
                    🐻lowPoints point❗
                🍉
            🍉
        🍉

        💭 return the risk level as a string
        ↩️ 🔡riskLevel❗
    🍉
    
    📗 Returns the solution for part B of the puzzle 📗
    🐇 ❓🅱️ input🍨🐚🔡🍆 ➡️ 🔡 🍇
        💭 transform the input string array into a 2D array of numbers (grid)
        🐰input 🍇 line🔡 ➡️ 🍨🐚🔢🍆
            🎶line❗ ➡️ characters
            🐰characters 🍇 character🔡 ➡️ 🔢
                ↩️ 🍺🔢character 10❗
            🍉❗ ➡️ row
            ↩️ row
        🍉❗ ➡️ gridData
        🆕🍫 gridData ❗ ➡️ grid

        🆕🍨🐚🍨🐚🔢🍆🍆❗ ➡️ 🖍️🆕lowPoints
        💭 foreach row in the grid
        🔂 rowIndex 🆕⏩0 🚦grid❓ 1❗ 🍇
            rowIndex ➖ 1 ➡️ aboveIndex
            rowIndex ➕ 1 ➡️ belowIndex
            💭 🐽grid rowIndex❗ ➡️ row
            💭 foreach cell in the row
            🔂 colIndex 🆕⏩0 🚥grid❓ 1❗ 🍇
                colIndex ➖ 1 ➡️ leftIndex
                colIndex ➕ 1 ➡️ rightIndex
                🍺🐽grid colIndex rowIndex❓ ➡️ cell

                💭 check each direction for a lower value
                aboveIndex ▶️🙌 0 🤝 🤜🍺🐽grid colIndex aboveIndex❓ ◀️ cell🤛 ➡️ isAboveLower
                belowIndex ◀️ 🚦grid❓ 🤝 🤜🍺🐽grid colIndex belowIndex❓ ◀️ cell🤛 ➡️ isBelowLower
                leftIndex ▶️🙌 0 🤝 🤜🍺🐽grid leftIndex rowIndex❓ ◀️ cell🤛 ➡️ isLeftLower
                rightIndex ◀️ 🚥grid❓ 🤝 🤜🍺🐽grid rightIndex rowIndex❓ ◀️ cell🤛 ➡️ isRightLower

                💭 if none of the adjacent cells are lower, add the value of the cell plus 1 to the risk level
                ↪️ ❎cell 🙌 9❗ 🤝 ❎isAboveLower❗ 🤝 ❎isBelowLower❗ 🤝 ❎isLeftLower❗ 🤝 ❎isRightLower❗ 🍇
                    🍿colIndex rowIndex🍆 ➡️ point
                    🐻lowPoints point❗
                🍉
            🍉
        🍉

        🆕🍨🐚🔢🍆❗ ➡️ 🖍️🆕basinSizes
        🔂 pointIndex 🆕⏩0 📏lowPoints❓ 1❗ 🍇
            🐽lowPoints pointIndex❗ ➡️ point
            🐽point 0❗ ➡️ x
            🐽point 1❗ ➡️ y
            🍺🐽grid x y❓ ➡️ cell

            ↪️ ❎cell 🙌 -1❗ 🍇
                🚗🐇🆎 grid point❗ ➡️ basinSize
                🐻basinSizes basinSize❗
            🍉
        🍉
        🦁basinSizes 🍇 a🔢 b🔢 ➡️ 🔢
            ↩️ b ➖ a
        🍉❗

        🐽basinSizes 0❗ ✖️ 🐽basinSizes 1❗ ✖️ 🐽basinSizes 2❗ ➡️ result
        ↩️ 🔡result❗
    🍉

    🐇 ❗🚗 grid🍫 startLocation🍨🐚🔢🍆 ➡️ 🔢 🍇
        💭 TODO: if it's not a 9 or -1, mark it as -1 (visited) then call 🚗❗ on neighboring cells. Returns the size of the basin
        🐽startLocation 0❗ ➡️ startX
        🐽startLocation 1❗ ➡️ startY
        🍺🐽grid startX startY❓ ➡️ startLocationValue
        ↪️ 🤜startLocationValue 🙌 9🤛 👐 🤜startLocationValue 🙌 -1🤛 🍇
            ↩️ 0
        🍉

        -1 ➡️ 🐽grid startX startY❗
        1 ➡️ 🖍️🆕basinSize

        🐽grid 🤜startX ➖ 1🤛 startY ❓ ➡️ left
        ↪️ ❎left 🙌 🤷❗ 🍇
            basinSize ⬅️➕ 🚗🐇🆎 grid 🍿 🤜startX ➖ 1🤛 startY 🍆❗
        🍉

        🐽grid 🤜startX ➕ 1🤛 startY ❓ ➡️ right
        ↪️ ❎right 🙌 🤷❗ 🍇
            basinSize ⬅️➕ 🚗🐇🆎 grid 🍿 🤜startX ➕ 1🤛 startY 🍆❗
        🍉

        🐽grid startX 🤜startY ➖ 1🤛 ❓ ➡️ up
        ↪️ ❎up 🙌 🤷❗ 🍇
            basinSize ⬅️➕ 🚗🐇🆎 grid 🍿 startX 🤜startY ➖ 1🤛 🍆❗
        🍉

        🐽grid startX 🤜startY ➕ 1🤛 ❓ ➡️ down
        ↪️ ❎down 🙌 🤷❗ 🍇
            basinSize ⬅️➕ 🚗🐇🆎 grid 🍿 startX 🤜startY ➕ 1🤛 🍆❗
        🍉

        ↩️ basinSize
    🍉

🍉

📗 Class for a grid row 📗
🐇 🍞 🍇
    🖍️🆕row 🍨🐚🔢🍆

    🆕 🍼row🍨🐚🔢🍆 🍇
    🍉

    ❓🐽 index🔢 ➡️ 🍬🔢 🍇
        ↪️ 📏row❓ ▶️ index 🍇
            ↩️ 🐽row index❗
        🍉
        ↩️ 🤷
    🍉

    ➡️🐽 🎍🥡value🔢 index🔢 🍇
        value ➡️ 🐽row index❗
    🍉

    ❓📏 ➡️ 🔢 🍇
        ↩️ 📏row❓
    🍉
🍉

📗 Class for a grid 📗
🐇 🍫 🍇
    🖍️🆕 rows 🍨🐚🍞🍆

    🆕 rowsData🍨🐚🍨🐚🔢🍆🍆 🍇
        🐰 rowsData 🍇 row🍨🐚🔢🍆 ➡️ 🍞
            ↩️ 🆕🍞 row❗
        🍉❗ ➡️ 🖍️rows
    🍉

    ❓🚦 ➡️ 🔢 🍇
        ↩️ 📏rows❓
    🍉

    ❓🚥 ➡️ 🔢 🍇
        ↩️ 📏🐽rows 0❗❓
    🍉

    ❓🐽 columnIndex🔢 rowIndex🔢 ➡️ 🍬🔢 🍇
        ↪️ rowIndex ▶️🙌 0 🤝 📏rows❓ ▶️ rowIndex 🍇
            🐽rows rowIndex❗ ➡️ row
            ↪️ columnIndex ▶️🙌 0 🤝 📏row❓ ▶️ columnIndex 🍇
                ↩️ 🐽row columnIndex❓
            🍉
        🍉
        ↩️ 🤷
    🍉

    ➡️🐽 🎍🥡value🔢 columnIndex🔢 rowIndex🔢 🍇
        value ➡️ 🐽🐽rows rowIndex❗ columnIndex❗
    🍉
🍉
